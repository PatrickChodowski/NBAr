library(NBAr)
library(NBAr)
writePG
?NBAe
?NBAr
??NBAr
install.packages("roxygen2")
library(roxygen2)
library(NBAr)
??NBAr
anrm <- function(y){
b <- y*(maxp-minp)+minp
return(b)
}
nrm <- function(x){
if(min(x,na.rm = T) == max(x, na.rm = T)){
return(min(x,na.rm = T))
}else{
a <- (x-min(x,na.rm = T))/(max(x, na.rm = T)-min(x,na.rm = T))
return(a)
}
}
trick <- function(x){
nnet <- neuralnet::neuralnet(f,data = finald[1:nrow(finald)-1,]
,hidden = ceiling((length(model_cols)+1)/2)
,rep=1
,threshold = 0.04
,stepmax = 1e6
,act.fct = "logistic"
,algorithm = "rprop+"
,linear.output = T)
msenn0 <- sum((as.numeric(unlist(nnet$response))
- as.numeric(unlist(nnet$net.result)))^2)/(nrow(finald)-1)
sw0 <- nnet$startweights
w0 <- nnet$weights
gw0 <- nnet$generalized.weights
return(list(msenn0,sw0,w0,gw0))
}
source("./magisterka/playergamesf.R")
source("./magisterka/garfun.R")
library(ggplot2)
library(reshape2)
library(dplyr)
library(jsonlite)
library(neuralnet)
library(doParallel)
#setwd("/home/osboxes/Documents")
schedule <- readRDS("./magisterka/schedule.rds")
shotchart_nogt <- readRDS("./magisterka/shotchart_nogt.rds")
player_list <- readRDS("./magisterka/player_list.rds")
team_list <- readRDS("./magisterka/team_list.rds")
team_list[team_list$abr == "PHO", "abr"] = "PHX"
boxscore_all <- readRDS("./magisterka/boxscore_all.rds")
load("./magisterka/player_cluster.rds")
load("./magisterka/playtypes.rds")
load("./magisterka/teamDefs.rds")
load("./magisterka/team_defs_abbr.RData")
pbp <- readRDS("./magisterka/pa.rds")
bsa<- boxscore_all
player_cluster$playeroff <- trimws(gsub("^\\S+","",player_cluster$PLAYER_NAME))
s <- as.data.frame(shotchart_nogt, stringsAsFactors = F)
s$PLAYER_NAME <- as.character(s$PLAYER_NAME)
s <- left_join(s,player_cluster, by = c("PLAYER_NAME" = "PLAYER_NAME"))
