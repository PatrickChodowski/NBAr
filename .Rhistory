names<- unlist(lapply(unique(t[t$GAME_ID == gameID, "PLAYER_NAME"]),FUN = function(x) trimws(gsub("^\\S+","",x))))
habr <- tl[tl$TEAM_NAME == s[s$GAME_ID == gameID, "home"],"abr"]
vabr <- tl[tl$TEAM_NAME == s[s$GAME_ID == gameID, "visitor"],"abr"]
rm(list=ls())
getPgData("NBA16", "rd")
tl <- teamlist
pb <- playbyplay
t <- traditional
s <- calendar
gameID <- "0021600004"
require(dplyr)
require(jsonlite)
require(zoo)
pb<- pb[pb$GAME_ID == gameID,]
t<- t[t$GAME_ID == gameID,]
names<- unlist(lapply(unique(t[t$GAME_ID == gameID, "PLAYER_NAME"]),FUN = function(x) trimws(gsub("^\\S+","",x))))
habr <- tl[tl$TEAM_NAME == s[s$GAME_ID == gameID, "home"],"abr"]
vabr <- tl[tl$TEAM_NAME == s[s$GAME_ID == gameID, "visitor"],"abr"]
s5v<- t[is.na(t$START_POSITION) == F & t$TEAM_ABBREVIATION == vabr, "PLAYER_NAME"]
s5h<- t[is.na(t$START_POSITION) == F & t$TEAM_ABBREVIATION == habr, "PLAYER_NAME"]
names<- unlist(lapply(unique(t[t$GAME_ID == gameID, "PLAYER_NAME"]),FUN = function(x) trimws(gsub("^\\S+","",x))))
s5v <- unlist(lapply(s5v,FUN = function(x) trimws(gsub("^\\S+","",x))))
s5h <- unlist(lapply(s5h,FUN = function(x) trimws(gsub("^\\S+","",x))))
who <- "HOMEDESCRIPTION"
test <- pb[pb$EVENTMSGTYPE %in% c(8,12) & pb$GAME_ID == gameID, append("HOMEDESCRIPTION",c("EVENTMSGTYPE","PERIOD","EVENTNUM"))]
test <- test[is.na(test[,1]) == F | test$EVENTMSGTYPE == 12,]
test[,5:9] <- NA
if(who == "HOMEDESCRIPTION"){
colnames(test)[5:9] <- c("A_home","B_home","C_home","D_home","E_home")
}else{
colnames(test)[5:9] <- c("A_visit","B_visit","C_visit","D_visit","E_visit")}
if(colnames(test)[1] == "VISITORDESCRIPTION"){
test[,5:9] <- as.data.frame(t(s5v),stringsAsFactors = F)
}else{
test[,5:9] <- as.data.frame(t(s5h),stringsAsFactors = F)}
n <- 1
n <- 1
for (n in 2:nrow(test))
{
schodzi <- unlist(strsplit(test[n,1]," "))[4]
wchodzi <- unlist(strsplit(test[n,1]," "))[2]
test[ n:nrow(test),which(test[n,] == schodzi)] <- wchodzi
if(test[n,"EVENTMSGTYPE"] == 12){
test[n,5:9] <- NA
if (length(which(test[n+1:nrow(test),"EVENTMSGTYPE"] == 12)) == 0){
nextp <- nrow(test)
}else{
nextp <- min(which(test[n+1:nrow(test),"EVENTMSGTYPE"] == 12 ) +n)}
fors <- lapply(test[(n+1):nextp,1],FUN = function(x) unlist(strsplit(x," "))[4])
subs <- lapply(test[(n+1):nextp,1],FUN = function(x) unlist(strsplit(x," "))[2])
fors <- na.omit(unlist(fors))
subs <- na.omit(unlist(subs))
period <- test[n,"PERIOD"]
if(length(setdiff(subs,setdiff(subs, fors))) != 5){
known <- unique(append(fors, subs))
pat <- setdiff(names,known)
pattern <- paste(pat,collapse="|")
unknown <- na.omit(pb[pb$PERIOD == period, who])
aaa<- unlist(lapply(unknown,strsplit, " "))
irving <- unique(gsub("\\(","",aaa[grepl(pattern, aaa)]))}
test[n:nrow(test),5] <- unlist(fors[1])
y <- 2
while(is.na(test[n,6]) == TRUE)
{test[n:nrow(test),6] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),6] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,7]) == TRUE)
{test[n:nrow(test),7] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),7] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,8]) == TRUE)
{test[n:nrow(test),8] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),8] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,9]) == TRUE)
{test[n:nrow(test),9] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),9] <- setdiff(irving, test[n,5:9])[1]}
}#poczwórny while, dzieki nba#dzieki nba
}#poczworny while w ifie, dzieki nba
}#poczworny while
home<-test
View(home)
who <- "VISITORDESCRIPTION"
test <- pb[pb$EVENTMSGTYPE %in% c(8,12) & pb$GAME_ID == gameID, append("VISITORDESCRIPTION",c("EVENTMSGTYPE","PERIOD","EVENTNUM"))]
test <- test[is.na(test[,1]) == F | test$EVENTMSGTYPE == 12,]
test[,5:9] <- NA
if(who == "HOMEDESCRIPTION"){
colnames(test)[5:9] <- c("A_home","B_home","C_home","D_home","E_home")
}else{
colnames(test)[5:9] <- c("A_visit","B_visit","C_visit","D_visit","E_visit")}
if(colnames(test)[1] == "VISITORDESCRIPTION"){
test[,5:9] <- as.data.frame(t(s5v),stringsAsFactors = F)
}else{
test[,5:9] <- as.data.frame(t(s5h),stringsAsFactors = F)}
n <- 1
for (n in 2:nrow(test))
{
schodzi <- unlist(strsplit(test[n,1]," "))[4]
wchodzi <- unlist(strsplit(test[n,1]," "))[2]
test[ n:nrow(test),which(test[n,] == schodzi)] <- wchodzi
if(test[n,"EVENTMSGTYPE"] == 12){
test[n,5:9] <- NA
if (length(which(test[n+1:nrow(test),"EVENTMSGTYPE"] == 12)) == 0){
nextp <- nrow(test)
}else{
nextp <- min(which(test[n+1:nrow(test),"EVENTMSGTYPE"] == 12 ) +n)}
fors <- lapply(test[(n+1):nextp,1],FUN = function(x) unlist(strsplit(x," "))[4])
subs <- lapply(test[(n+1):nextp,1],FUN = function(x) unlist(strsplit(x," "))[2])
subs <- na.omit(unlist(subs))
period <- test[n,"PERIOD"]
fors <- na.omit(unlist(fors))
if(length(setdiff(subs,setdiff(subs, fors))) != 5){
known <- unique(append(fors, subs))
pat <- setdiff(names,known)
pattern <- paste(pat,collapse="|")
unknown <- na.omit(pb[pb$PERIOD == period, who])
aaa<- unlist(lapply(unknown,strsplit, " "))
irving <- unique(gsub("\\(","",aaa[grepl(pattern, aaa)]))}
test[n:nrow(test),5] <- unlist(fors[1])
y <- 2
while(is.na(test[n,6]) == TRUE)
{test[n:nrow(test),6] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),6] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,7]) == TRUE)
{test[n:nrow(test),7] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),7] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,8]) == TRUE)
{test[n:nrow(test),8] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),8] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,9]) == TRUE)
{test[n:nrow(test),9] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),9] <- setdiff(irving, test[n,5:9])[1]}
}#poczwórny while, dzieki nba#dzieki nba
}#poczworny while w ifie, dzieki nba
}#poczworny while w if
n
irving
test[n,5:9]
setdiff(irving, test[n,5:9])[1]
n <- 1
who <- "VISITORDESCRIPTION"
test <- pb[pb$EVENTMSGTYPE %in% c(8,12) & pb$GAME_ID == gameID, append("VISITORDESCRIPTION",c("EVENTMSGTYPE","PERIOD","EVENTNUM"))]
test <- test[is.na(test[,1]) == F | test$EVENTMSGTYPE == 12,]
test[,5:9] <- NA
if(who == "HOMEDESCRIPTION"){
colnames(test)[5:9] <- c("A_home","B_home","C_home","D_home","E_home")
}else{
colnames(test)[5:9] <- c("A_visit","B_visit","C_visit","D_visit","E_visit")}
if(colnames(test)[1] == "VISITORDESCRIPTION"){
test[,5:9] <- as.data.frame(t(s5v),stringsAsFactors = F)
}else{
test[,5:9] <- as.data.frame(t(s5h),stringsAsFactors = F)}
n <- 1
n
View(test)
n<-2
test <- test[order(test$EVENTNUM),]
for (n in 2:nrow(test))
{
schodzi <- unlist(strsplit(test[n,1]," "))[4]
wchodzi <- unlist(strsplit(test[n,1]," "))[2]
test[ n:nrow(test),which(test[n,] == schodzi)] <- wchodzi
if(test[n,"EVENTMSGTYPE"] == 12){
test[n,5:9] <- NA
if (length(which(test[n+1:nrow(test),"EVENTMSGTYPE"] == 12)) == 0){
nextp <- nrow(test)
}else{
nextp <- min(which(test[n+1:nrow(test),"EVENTMSGTYPE"] == 12 ) +n)}
fors <- lapply(test[(n+1):nextp,1],FUN = function(x) unlist(strsplit(x," "))[4])
subs <- lapply(test[(n+1):nextp,1],FUN = function(x) unlist(strsplit(x," "))[2])
fors <- na.omit(unlist(fors))
subs <- na.omit(unlist(subs))
period <- test[n,"PERIOD"]
if(length(setdiff(subs,setdiff(subs, fors))) != 5){
known <- unique(append(fors, subs))
pat <- setdiff(names,known)
pattern <- paste(pat,collapse="|")
unknown <- na.omit(pb[pb$PERIOD == period, who])
aaa<- unlist(lapply(unknown,strsplit, " "))
irving <- unique(gsub("\\(","",aaa[grepl(pattern, aaa)]))}
test[n:nrow(test),5] <- unlist(fors[1])
y <- 2
while(is.na(test[n,6]) == TRUE)
{test[n:nrow(test),6] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),6] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,7]) == TRUE)
{test[n:nrow(test),7] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),7] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,8]) == TRUE)
{test[n:nrow(test),8] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),8] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,9]) == TRUE)
{test[n:nrow(test),9] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),9] <- setdiff(irving, test[n,5:9])[1]}
}#poczwórny while, dzieki nba#dzieki nba
}#poczworny while w ifie, dzieki nba
}#poczworny while w if
n
View(test)
who <- "VISITORDESCRIPTION"
test <- pb[pb$EVENTMSGTYPE %in% c(8,12) & pb$GAME_ID == gameID, append("VISITORDESCRIPTION",c("EVENTMSGTYPE","PERIOD","EVENTNUM"))]
test <- test[is.na(test[,1]) == F | test$EVENTMSGTYPE == 12,]
test[,5:9] <- NA
if(who == "HOMEDESCRIPTION"){
colnames(test)[5:9] <- c("A_home","B_home","C_home","D_home","E_home")
}else{
colnames(test)[5:9] <- c("A_visit","B_visit","C_visit","D_visit","E_visit")}
if(colnames(test)[1] == "VISITORDESCRIPTION"){
test[,5:9] <- as.data.frame(t(s5v),stringsAsFactors = F)
}else{
test[,5:9] <- as.data.frame(t(s5h),stringsAsFactors = F)}
n <- 1
test <- test[order(test$EVENTNUM),]
for (n in 2:nrow(test))
{
schodzi <- unlist(strsplit(test[n,1]," "))[4]
wchodzi <- unlist(strsplit(test[n,1]," "))[2]
test[ n:nrow(test),which(test[n,] == schodzi)] <- wchodzi
if(test[n,"EVENTMSGTYPE"] == 12){
test[n,5:9] <- NA
if (length(which(test[n+1:nrow(test),"EVENTMSGTYPE"] == 12)) == 0){
nextp <- nrow(test)
}else{
nextp <- min(which(test[n+1:nrow(test),"EVENTMSGTYPE"] == 12 ) +n)}
fors <- lapply(test[(n+1):nextp,1],FUN = function(x) unlist(strsplit(x," "))[4])
subs <- lapply(test[(n+1):nextp,1],FUN = function(x) unlist(strsplit(x," "))[2])
fors <- na.omit(unlist(fors))
subs <- na.omit(unlist(subs))
period <- test[n,"PERIOD"]
if(length(setdiff(subs,setdiff(subs, fors))) != 5){
known <- unique(append(fors, subs))
pat <- setdiff(names,known)
pattern <- paste(pat,collapse="|")
unknown <- na.omit(pb[pb$PERIOD == period, who])
aaa<- unlist(lapply(unknown,strsplit, " "))
irving <- unique(gsub("\\(","",aaa[grepl(pattern, aaa)]))}
test[n:nrow(test),5] <- unlist(fors[1])
y <- 2
while(is.na(test[n,6]) == TRUE)
{test[n:nrow(test),6] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),6] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,7]) == TRUE)
{test[n:nrow(test),7] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),7] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,8]) == TRUE)
{test[n:nrow(test),8] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),8] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,9]) == TRUE)
{test[n:nrow(test),9] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),9] <- setdiff(irving, test[n,5:9])[1]}
}#poczwórny while, dzieki nba#dzieki nba
}#poczworny while w ifie, dzieki nba
}#poczworny while w if
View(test)
who <- "VISITORDESCRIPTION"
test <- pb[pb$EVENTMSGTYPE %in% c(8,12) & pb$GAME_ID == gameID, append("VISITORDESCRIPTION",c("EVENTMSGTYPE","PERIOD","EVENTNUM"))]
test <- test[is.na(test[,1]) == F | test$EVENTMSGTYPE == 12,]
test[,5:9] <- NA
if(who == "HOMEDESCRIPTION"){
colnames(test)[5:9] <- c("A_home","B_home","C_home","D_home","E_home")
}else{
colnames(test)[5:9] <- c("A_visit","B_visit","C_visit","D_visit","E_visit")}
if(colnames(test)[1] == "VISITORDESCRIPTION"){
test[,5:9] <- as.data.frame(t(s5v),stringsAsFactors = F)
}else{
test[,5:9] <- as.data.frame(t(s5h),stringsAsFactors = F)}
n <- 1
test <- test[order(test$EVENTNUM),]
s5h
s5v
View(test)
for (n in 2:6)
{
schodzi <- unlist(strsplit(test[n,1]," "))[4]
wchodzi <- unlist(strsplit(test[n,1]," "))[2]
test[ n:nrow(test),which(test[n,] == schodzi)] <- wchodzi
if(test[n,"EVENTMSGTYPE"] == 12){
test[n,5:9] <- NA
if (length(which(test[n+1:nrow(test),"EVENTMSGTYPE"] == 12)) == 0){
nextp <- nrow(test)
}else{
nextp <- min(which(test[n+1:nrow(test),"EVENTMSGTYPE"] == 12 ) +n)}
fors <- lapply(test[(n+1):nextp,1],FUN = function(x) unlist(strsplit(x," "))[4])
subs <- lapply(test[(n+1):nextp,1],FUN = function(x) unlist(strsplit(x," "))[2])
fors <- na.omit(unlist(fors))
subs <- na.omit(unlist(subs))
period <- test[n,"PERIOD"]
if(length(setdiff(subs,setdiff(subs, fors))) != 5){
known <- unique(append(fors, subs))
pat <- setdiff(names,known)
pattern <- paste(pat,collapse="|")
unknown <- na.omit(pb[pb$PERIOD == period, who])
aaa<- unlist(lapply(unknown,strsplit, " "))
irving <- unique(gsub("\\(","",aaa[grepl(pattern, aaa)]))}
test[n:nrow(test),5] <- unlist(fors[1])
y <- 2
while(is.na(test[n,6]) == TRUE)
{test[n:nrow(test),6] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),6] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,7]) == TRUE)
{test[n:nrow(test),7] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),7] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,8]) == TRUE)
{test[n:nrow(test),8] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),8] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,9]) == TRUE)
{test[n:nrow(test),9] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),9] <- setdiff(irving, test[n,5:9])[1]}
}#poczwórny while, dzieki nba#dzieki nba
}#poczworny while w ifie, dzieki nba
}#poczworny whil
n <- 7
testx <- test
schodzi <- unlist(strsplit(test[n,1]," "))[4]
wchodzi <- unlist(strsplit(test[n,1]," "))[2]
test[ n:nrow(test),which(test[n,] == schodzi)] <- wchodzi
schodzi
wchodzi
test[ n:nrow(test),which(test[n,] == schodzi)] <- wchodzi
test[n,"EVENTMSGTYPE"] == 12
test[n,5:9] <- NA
length(which(test[n+1:nrow(test),"EVENTMSGTYPE"] == 12)) == 0
nextp <- min(which(test[n+1:nrow(test),"EVENTMSGTYPE"] == 12 ) +n)}
nextp <- min(which(test[n+1:nrow(test),"EVENTMSGTYPE"] == 12 ) +n)
nextp
fors <- lapply(test[(n+1):nextp,1],FUN = function(x) unlist(strsplit(x," "))[4])
subs <- lapply(test[(n+1):nextp,1],FUN = function(x) unlist(strsplit(x," "))[2])
fors
subs
fors <- na.omit(unlist(fors))
subs <- na.omit(unlist(subs))
period <- test[n,"PERIOD"]
fors
subs
period
length(setdiff(subs,setdiff(subs, fors)))
setdiff(subs, fors)
setdiff(subs,setdiff(subs, fors))
known <- unique(append(fors, subs))
known
pat <- setdiff(names,known)
pat
pattern <- paste(pat,collapse="|")
pattern
na.omit(pb[pb$PERIOD == period, who])
who
unknown <- na.omit(pb[pb$PERIOD == period, who])
aaa<- unlist(lapply(unknown,strsplit, " "))
aaa
unique(gsub("\\(","",aaa[grepl(pattern, aaa)]))}
unique(gsub("\\(","",aaa[grepl(pattern, aaa)]))
aaa[grepl(pattern, aaa)]
grepl(pattern, aaa)
aaa
pattern
test[n:nrow(test),5] <- unlist(fors[1])
y <- 2
while(is.na(test[n,6]) == TRUE)
{test[n:nrow(test),6] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),6] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,7]) == TRUE)
{test[n:nrow(test),7] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),7] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,8]) == TRUE)
{test[n:nrow(test),8] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),8] <- setdiff(irving, test[n,5:9])[1]}
}
while(is.na(test[n,9]) == TRUE)
{test[n:nrow(test),9] <- ifelse(!unlist(fors[y]) %in% subs[1:y-1],unlist(fors[y]),NA)
y <- y + 1
if(y>50){test[n:nrow(test),9] <- setdiff(irving, test[n,5:9])[1]}
}#poczwórny while, dzieki nba#dzieki nba
unlist(fors[y]) %in% subs[1:y-1]
unlist(fors[y]
)
y
test[n,5:9] <- NA
pb
VieW(pb)
View(pb)
VieW(t)
View(t)
View(shotchart)
shotchart_cs<- cleanShotchart(s=shotchart)
eff_area <- GSISummary(pid = plist,col1=1, s=shotchart_cs)
plist<- getPlayers()
eff_area <- GSISummary(pid = plist,col1=1, s=shotchart_cs)
eff_type <- GSISummary(pid = plist,col3=1, col4=1,s=shotchart_cs)
getGSI(plist[12])
getGSI(plist[122])
getGSI(pid =plist[122])
GSISummary(pid = plist[122],col1=1, s=shotchart_cs)
shots <- GSISummary(pid)
library(NBAr)
getPgData("NBA16", "rd")
plist<- getPlayers()
shotchart_cs<- cleanShotchart(s=shotchart)
eff_area <- GSISummary(pid = plist,col1=1, s=shotchart_cs)
eff_type <- GSISummary(pid = plist,col3=1, col4=1,s=shotchart_cs)
getGSI(pid =plist[122])
getGSIa <- function(pid, s=shotchart_cs){
shots <- GSISummary(pid = pid, s=shotchart_cs)
gms <- length(unique(s[s$PLAYER_ID %in% pid,"GAME_ID"]))  #liczba spotkan
cutoff <- quantile(shots$Totals, c(0.50)) #czestosc oddawania rzutu
shots2 <- full_join(shots,eff_area[,c("SHOT_ZONE_AREA","SHOT_ZONE_BASIC","efficiency")], by = c("SHOT_ZONE_AREA","SHOT_ZONE_BASIC"))
colnames(shots2)[c(8,9)] <- c("efficiency_player", "efficiency_overall")
shots2 <-  shots2[is.na(shots2$ACTION_TYPE) == FALSE,]
shots2$GOOD_FLAG <- ifelse(shots2$Totals >= cutoff & shots2$efficiency_player >= shots2$efficiency_overall,1,0)
rzuty <- unique(shots2[shots2$Totals < cutoff & shots2$efficiency_player >= shots2$efficiency_overall,"ACTION_TYPE"])
n <- 1
if (length(rzuty) != 0)
{
for (n in 1:length(rzuty))
{
if (sum(shots2[shots2$ACTION_TYPE == rzuty[n],"Totals"]) >= cutoff){
a <- sum(shots2[shots2$ACTION_TYPE == rzuty[n],"Made"], na.rm = TRUE)
b <- sum(shots2[shots2$ACTION_TYPE == rzuty[n],"Totals"], na.rm = TRUE)
c <- eff_type[eff_type$ACTION_TYPE == rzuty[n],"efficiency"]
shots2$GOOD_FLAG <- ifelse(shots2$ACTION_TYPE == rzuty[n] & a/b >= c &
shots2$Totals < cutoff & shots2$efficiency_player >= shots2$efficiency_overall
, 1, shots2$GOOD_FLAG)
}
}}
shots2$GOOD_FLAG <- ifelse(shots2$Totals >= cutoff & shots2$SHOT_ZONE_BASIC == 'Restricted Area' & shots2$efficiency_player >= 0.500,1,shots2$GOOD_FLAG)
shots2$PLAYER_ID <- pid
shots4 <- shots2[-nrow(shots2),c("PLAYER_ID","ACTION_TYPE","SHOT_ZONE_BASIC","SHOT_ZONE_AREA","GOOD_FLAG")]
return(shots4)}
getGSIa(plist[122])
rm(list=ls())
getPgData("NBA16", "rd")
plist<- getPlayers()
shotchart_cs<- cleanShotchart(s=shotchart)
eff_area <- GSISummary(pid = plist,col1=1, s=shotchart_cs)
eff_type <- GSISummary(pid = plist,col3=1, col4=1,s=shotchart_cs)
getGSI(pid =plist[122])
getGSIa(pid =plist[122])
getGSIa <- function(pid, s=shotchart_cs){
shots <- GSISummary(pid = pid, s=shotchart_cs)
gms <- length(unique(s[s$PLAYER_ID %in% pid,"GAME_ID"]))  #liczba spotkan
cutoff <- quantile(shots$Totals, c(0.50)) #czestosc oddawania rzutu
shots2 <- full_join(shots,eff_area[,c("SHOT_ZONE_AREA","SHOT_ZONE_BASIC","efficiency")], by = c("SHOT_ZONE_AREA","SHOT_ZONE_BASIC"))
colnames(shots2)[c(8,9)] <- c("efficiency_player", "efficiency_overall")
shots2 <-  shots2[is.na(shots2$ACTION_TYPE) == FALSE,]
shots2$GOOD_FLAG <- ifelse(shots2$Totals >= cutoff & shots2$efficiency_player >= shots2$efficiency_overall,1,0)
rzuty <- unique(shots2[shots2$Totals < cutoff & shots2$efficiency_player >= shots2$efficiency_overall,"ACTION_TYPE"])
n <- 1
if (length(rzuty) != 0)
{
for (n in 1:length(rzuty))
{
if (sum(shots2[shots2$ACTION_TYPE == rzuty[n],"Totals"]) >= cutoff){
a <- sum(shots2[shots2$ACTION_TYPE == rzuty[n],"Made"], na.rm = TRUE)
b <- sum(shots2[shots2$ACTION_TYPE == rzuty[n],"Totals"], na.rm = TRUE)
c <- eff_type[eff_type$ACTION_TYPE == rzuty[n],"efficiency"]
shots2$GOOD_FLAG <- ifelse(shots2$ACTION_TYPE == rzuty[n] & a/b >= c &
shots2$Totals < cutoff & shots2$efficiency_player >= shots2$efficiency_overall
, 1, shots2$GOOD_FLAG)
}
}}
shots2$GOOD_FLAG <- ifelse(shots2$Totals >= cutoff & shots2$SHOT_ZONE_BASIC == 'Restricted Area' & shots2$efficiency_player >= 0.500,1,shots2$GOOD_FLAG)
shots2$PLAYER_ID <- pid
shots4 <- shots2[-nrow(shots2),c("PLAYER_ID","ACTION_TYPE","SHOT_ZONE_BASIC","SHOT_ZONE_AREA","GOOD_FLAG")]
return(shots4)}
getGSIa(plist[122])
getGSIa(pid =plist[122])
library(NBAr)
getPgData("NBA16", "rd")
getGSI(pid =plist[122])
library(NBAr)
getGSI(pid =plist[122])
library(NBAr)
getGSI(pid =plist[122])
GSISummary(pid = pid, s=shotchart_cs)
library(NBAr)
library(NBAr)
