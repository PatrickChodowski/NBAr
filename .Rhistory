seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/boxscoreadvancedv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
index <- which(n2$resultSets$name == "PlayerStats")
cols <- unlist(n2$resultSets$headers[index])
vls <- n2$resultSets$rowSet[index]
vls2 <- as.data.frame(vls,stringsAsFactors = F)
colnames(vls2) <- cols
vls2[,10:ncol(vls2)] <- sapply(vls2[,10:ncol(vls2)], as.numeric)
vls2$MINS <- as.numeric(minute(ms(vls2[,9])))
vls2$SECS <- as.numeric(second(ms(vls2[,9])))
vls2 <- vls2[,-9]
}
)
system.time(
{
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/boxscoreadvancedv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
web_page <- readLines(url,warn = F)
x1 <- gsub("[\\{\\}\\]]", "", web_page, perl=TRUE)
x2 <- gsub("[\\[]", "\n", x1, perl=TRUE)
x3 <- gsub("\"rowSet\":\n", "", x2, perl=TRUE)
x4 <- gsub(";", "|",x3, perl=TRUE)
x5<- read.table(textConnection(x4), header=T, sep=",", skip=2, stringsAsFactors=FALSE, fill = TRUE)
x6 <- x5[ grepl("[[:digit:]]", x5$PLAYER_ID) == TRUE,  names(x5) != "X"]
bsb[bsb[,] == "null"] = NA
bsb[bsb[,] == ""] = NA
bsb[,10:ncol(bsb)] <- sapply(bsb[,10:ncol(bsb)], as.numeric)
bsb$MINS <- as.numeric(minute(ms(bsb[,9])))
bsb$SECS <- as.numeric(second(ms(bsb[,9])))
bsb <- bsb[,-9]
}
)
system.time(
{
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/boxscoreadvancedv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
index <- which(n2$resultSets$name == "PlayerStats")
cols <- unlist(n2$resultSets$headers[index])
vls <- n2$resultSets$rowSet[index]
vls2 <- as.data.frame(vls,stringsAsFactors = F)
colnames(vls2) <- cols
vls2[,10:ncol(vls2)] <- sapply(vls2[,10:ncol(vls2)], as.numeric)
vls2$MINS <- as.numeric(minute(ms(vls2[,9])))
vls2$SECS <- as.numeric(second(ms(vls2[,9])))
vls2 <- vls2[,-9]
}
)
system.time(
{
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/boxscoreadvancedv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
web_page <- readLines(url,warn = F)
x1 <- gsub("[\\{\\}\\]]", "", web_page, perl=TRUE)
x2 <- gsub("[\\[]", "\n", x1, perl=TRUE)
x3 <- gsub("\"rowSet\":\n", "", x2, perl=TRUE)
x4 <- gsub(";", "|",x3, perl=TRUE)
x5<- read.table(textConnection(x4), header=T, sep=",", skip=2, stringsAsFactors=FALSE, fill = TRUE)
bsb <- x5[ grepl("[[:digit:]]", x5$PLAYER_ID) == TRUE,  names(x5) != "X"]
bsb[bsb[,] == "null"] = NA
bsb[bsb[,] == ""] = NA
bsb[,10:ncol(bsb)] <- sapply(bsb[,10:ncol(bsb)], as.numeric)
bsb$MINS <- as.numeric(minute(ms(bsb[,9])))
bsb$SECS <- as.numeric(second(ms(bsb[,9])))
bsb <- bsb[,-9]
}
)
system.time(
{
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/boxscoreadvancedv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
web_page <- readLines(url,warn = F)
x1 <- gsub("[\\{\\}\\]]", "", web_page, perl=TRUE)
x2 <- gsub("[\\[]", "\n", x1, perl=TRUE)
x3 <- gsub("\"rowSet\":\n", "", x2, perl=TRUE)
x4 <- gsub(";", "|",x3, perl=TRUE)
x5<- read.table(textConnection(x4), header=T, sep=",", skip=2, stringsAsFactors=FALSE, fill = TRUE)
bsb <- x5[ grepl("[[:digit:]]", x5$PLAYER_ID) == TRUE,  names(x5) != "X"]
bsb[bsb[,] == "null"] = NA
bsb[bsb[,] == ""] = NA
bsb[,10:ncol(bsb)] <- sapply(bsb[,10:ncol(bsb)], as.numeric)
bsb$MINS <- as.numeric(minute(ms(bsb[,9])))
bsb$SECS <- as.numeric(second(ms(bsb[,9])))
bsb <- bsb[,-9]
}
)
rm(list=ls())
season = "2014"
gameID <- "0021400001"
system.time(
{
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/boxscoreadvancedv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
index <- which(n2$resultSets$name == "PlayerStats")
cols <- unlist(n2$resultSets$headers[index])
vls <- n2$resultSets$rowSet[index]
vls2 <- as.data.frame(vls,stringsAsFactors = F)
colnames(vls2) <- cols
vls2[,10:ncol(vls2)] <- sapply(vls2[,10:ncol(vls2)], as.numeric)
vls2$MINS <- as.numeric(minute(ms(vls2[,9])))
vls2$SECS <- as.numeric(second(ms(vls2[,9])))
vls2 <- vls2[,-9]
}
)
rm(list=ls())
season = "2014"
gameID <- "0021400001"
system.time(
{
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/boxscoreadvancedv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
web_page <- readLines(url,warn = F)
x1 <- gsub("[\\{\\}\\]]", "", web_page, perl=TRUE)
x2 <- gsub("[\\[]", "\n", x1, perl=TRUE)
x3 <- gsub("\"rowSet\":\n", "", x2, perl=TRUE)
x4 <- gsub(";", "|",x3, perl=TRUE)
x5<- read.table(textConnection(x4), header=T, sep=",", skip=2, stringsAsFactors=FALSE, fill = TRUE)
bsb <- x5[ grepl("[[:digit:]]", x5$PLAYER_ID) == TRUE,  names(x5) != "X"]
bsb[bsb[,] == "null"] = NA
bsb[bsb[,] == ""] = NA
bsb[,10:ncol(bsb)] <- sapply(bsb[,10:ncol(bsb)], as.numeric)
bsb$MINS <- as.numeric(minute(ms(bsb[,9])))
bsb$SECS <- as.numeric(second(ms(bsb[,9])))
bsb <- bsb[,-9]
}
)
season = "2014"
gameID <- "0021400001"
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/boxscoremiscv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
index <- which(n2$resultSets$name == "PlayerStats")
index
View(n2)
index <- which(n2$resultSets$name == "sqlPlayersMisc")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
index <- which(n2$resultSets$name == "sqlPlayersMisc")
cols <- unlist(n2$resultSets$headers[index])
vls <- n2$resultSets$rowSet[index]
vls2 <- as.data.frame(vls,stringsAsFactors = F)
colnames(vls2) <- cols
vls2[,10:ncol(vls2)] <- sapply(vls2[,10:ncol(vls2)], as.numeric)
vls2$MINS <- as.numeric(minute(ms(vls2[,9])))
vls2$SECS <- as.numeric(second(ms(vls2[,9])))
vls2 <- vls2[,-9]
View(vls2)
str(vls)
str(vls2)
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/boxscoreplayertrackv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
index <- which(n2$resultSets$name == "sqlPlayersMisc")
index
gameID <- "0021400002"
url <- paste("http://stats.nba.com/stats/boxscoreplayertrackv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
n2$parameters$startPeriod
n2$parameters$StartPeriod
season = "2016"
gameID <- "0021600002"
url <- paste("http://stats.nba.com/stats/boxscoreplayertrackv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
summary(n2)
summary(n2$parameters$GameID)
summary(n2$resultSets$name)
n2$resultSets$name[1]
season = "2014"
gameID <- "0021400001"
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/boxscoreplayertrackv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
index <- which(n2$resultSets$name == "PlayerTrack")
cols <- unlist(n2$resultSets$headers[index])
cols
vls <- n2$resultSets$rowSet[index]
vls2 <- as.data.frame(vls,stringsAsFactors = F)
colnames(vls2) <- cols
vls2[,10:ncol(vls2)] <- sapply(vls2[,10:ncol(vls2)], as.numeric)
vls2$MINS <- as.numeric(minute(ms(vls2[,9])))
vls2$SECS <- as.numeric(second(ms(vls2[,9])))
vls2 <- vls2[,-9]
View(vls2)
season = "2014"
gameID <- "0021400001"
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/boxscoretraditionalv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
View(n2)
index <- which(n2$resultSets$name == "PlayerStats")
cols <- unlist(n2$resultSets$headers[index])
cols
vls <- n2$resultSets$rowSet[index]
vls2 <- as.data.frame(vls,stringsAsFactors = F)
colnames(vls2) <- cols
vls2[,10:ncol(vls2)] <- sapply(vls2[,10:ncol(vls2)], as.numeric)
vls2$MINS <- as.numeric(minute(ms(vls2[,9])))
vls2$SECS <- as.numeric(second(ms(vls2[,9])))
vls2 <- vls2[,-9]
library(NBAr)
?getBoxscoreAdv
?getBoxscore
?getBoxscoreTrad
?getBoxscoreMisc
?gsub
?grep
.libPaths()
library(NBAr)
library(NBAr)
?getBoxscore
library(NBAr)
library(NBAr)
getBoxscoreAdv()
getBoxscoreAdv
library(NBAr)
library(NBAr)
library(NBAr)
library(NBAr)
library(NBAr)
library(NBAr)
library(NBAr)
#' @title Download Boxscore data for NBA game
#'
#' @description  Download and process NBA.com boxscore data for given game and season.
#'
#' @param gameID Game's ID in NBA.com DB
#' @param season Number of the year in which season started
#'
#' @return Dataset containing data from one of the boxscore pages from NBA.com. Functions enable downloading Traditional, Advanced, Miscallenous or Player Tracking data.
#'
#' @author Patrick Chodowski, \email{Chodowski.Patrick@@gmail.com}
#' @keywords NBAr, Boxscores, players, Game, Misc, Advanced, Traditional, Player Tracking
#'
#' @examples
#' getBoxscoreTrad("0021400001","2014")
#' getBoxscoreMisc("0021400001","2014")
#' getBoxscoreAdv("0021400001","2014")
#' getBoxscorePt("0021400001","2014")
#'
#' gamelist<- paste("00",as.character(c(21400001:21401230)),sep="")
#' boxscores <- lapply(gamelist, getBoxscorePt, season="2014")
#' player.tracking <- do.call(rbind.data.frame,boxscores)
#'
#'  @importFrom lubridate minutes
#' @importFrom lubridate hours
#' @importFrom lubridate seconds
#' @import jsonlite fromJSON
#'
#' @export getBoxscoreAdv
getBoxscoreAdv <- function(gameID, season){
require(lubridate,quietly = T)
require(jsonlite, quietly = T)
tryCatch({
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/boxscoreadvancedv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
index <- which(n2$resultSets$name == "PlayerStats")
cols <- unlist(n2$resultSets$headers[index])
vls <- n2$resultSets$rowSet[index]
vls2 <- as.data.frame(vls,stringsAsFactors = F)
colnames(vls2) <- cols
vls2[,10:ncol(vls2)] <- sapply(vls2[,10:ncol(vls2)], as.numeric)
vls2$MINS <- as.numeric(minute(ms(vls2[,9])))
vls2$SECS <- as.numeric(second(ms(vls2[,9])))
vls2 <- vls2[,-9]
return(vls2)}, error=function(e) NULL)
}
getBoxscoreMisc <- function(gameID, season){
require(lubridate,quietly = T)
require(jsonlite, quietly = T)
tryCatch({
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/boxscoremiscv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
index <- which(n2$resultSets$name == "sqlPlayersMisc")
cols <- unlist(n2$resultSets$headers[index])
vls <- n2$resultSets$rowSet[index]
vls2 <- as.data.frame(vls,stringsAsFactors = F)
colnames(vls2) <- cols
vls2[,10:ncol(vls2)] <- sapply(vls2[,10:ncol(vls2)], as.numeric)
vls2$MINS <- as.numeric(minute(ms(vls2[,9])))
vls2$SECS <- as.numeric(second(ms(vls2[,9])))
vls2 <- vls2[,-9]
return(vls2)}, error=function(e) NULL)
}
getBoxscorePt <- function(gameID, season){
require(lubridate,quietly = T)
require(jsonlite, quietly = T)
tryCatch({
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/boxscoreplayertrackv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
index <- which(n2$resultSets$name == "PlayerTrack")
cols <- unlist(n2$resultSets$headers[index])
vls <- n2$resultSets$rowSet[index]
vls2 <- as.data.frame(vls,stringsAsFactors = F)
colnames(vls2) <- cols
vls2[,10:ncol(vls2)] <- sapply(vls2[,10:ncol(vls2)], as.numeric)
vls2$MINS <- as.numeric(minute(ms(vls2[,9])))
vls2$SECS <- as.numeric(second(ms(vls2[,9])))
vls2 <- vls2[,-9]
return(vls2)}, error=function(e) NULL)
}
getBoxscoreTrad <- function(gameID, season){
require(lubridate,quietly = T)
require(jsonlite, quietly = T)
tryCatch({
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/boxscoretraditionalv2?EndPeriod=10&EndRange=28800&GameID=",gameID,"&RangeType=0&Season=",seasonid,"&SeasonType=Regular+Season&StartPeriod=1&StartRange=0", sep = "")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
index <- which(n2$resultSets$name == "PlayerStats")
cols <- unlist(n2$resultSets$headers[index])
vls <- n2$resultSets$rowSet[index]
vls2 <- as.data.frame(vls,stringsAsFactors = F)
colnames(vls2) <- cols
vls2[,10:ncol(vls2)] <- sapply(vls2[,10:ncol(vls2)], as.numeric)
vls2$MINS <- as.numeric(minute(ms(vls2[,9])))
vls2$SECS <- as.numeric(second(ms(vls2[,9])))
vls2 <- vls2[,-9]
return(vls2)}, error=function(e) NULL)
}
library(NBAr)
?getBoxscoreAdv
?getBoxscoreTrad
?getBoxscorePt
library(NBAr)
?getBoxscoreTrad
season <- "2014"
gameID <- "0021400001"
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/playbyplay?GameID=", gameID, "&StartPeriod=0&EndPeriod=14", sep="")
url <- paste("http://stats.nba.com/stats/playbyplay?GameID=", gameID, "&StartPeriod=0&EndPeriod=14", sep="")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
View(n2)
index <- which(n2$resultSets$name == "PlayByPlay")
index
cols <- unlist(n2$resultSets$headers[index])
cols
vls <- n2$resultSets$rowSet[index]
vls
vls2 <- as.data.frame(vls,stringsAsFactors = F)
colnames(vls2) <- cols
View(vls2)
str(vls2)
vls2$MINS <- as.numeric(minute(ms(vls2$PCTIMESTRING)))
vls2$SECS <- as.numeric(second(ms(vls2$PCTIMESTRING)))
vls2[1,c("SCORE","SCOREMARGIN")] <- c("0 - 0",0)
vls2[,11:12] <- apply(vls2[,11:12],2,na.locf)
require(zoo)
require(zoo,quietly = T)
vls2[,11:12] <- apply(vls2[,11:12],2,na.locf)
library(NBAr)
NBAr::getPlaybyplay
library(NBAr)
NBAr::getPlaybyplay
gameID <- "0021400001"
season <- "2014"
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=",seasonid,"&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=",playerID,"&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&RookieYear=&SeasonSegment=&PlayerPosition=", sep="")
playerID <- "2853"
season <- "2014"
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=",seasonid,"&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=",playerID,"&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&RookieYear=&SeasonSegment=&PlayerPosition=", sep="")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
View(n2)
summary(n2)
n2$resultSets$name
index <- which(n2$resultSets$name == "Shot_Chart_Detail")
index
cols <- unlist(n2$resultSets$headers[index])
cols
vls <- n2$resultSets$rowSet[index]
View(vls)
colnames(vls2) <- cols
vls2 <- as.data.frame(vls,stringsAsFactors = F)
colnames(vls2) <- cols
str(vls2)
library(NBAr)
NBAr::getShotchart
playerID <- "2853"
url <- paste("http://stats.nba.com/stats/commonplayerinfo?LeagueID=00&PlayerID=",playerID, "&SeasonType=Regular+Season", sep = "")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
VieW(n2)
View(n2)
summary(n2)
n2$resultSets$name
index <- which(n2$resultSets$name == "CommonPlayerInfo")
cols <- unlist(n2$resultSets$headers[index])
cols
vls <- n2$resultSets$rowSet[index]
View(vls)
vls2 <- as.data.frame(vls,stringsAsFactors = F)
colnames(vls2) <- cols
vls2$WEIGHT <- as.numeric(vls2$WEIGHT)
vls2$HEIGHT <- round((as.numeric(substr(vls2$HEIGHT, 1, 1)) *
30.5 + as.numeric(substr(vls2$HEIGHT, 3, 5)) * 2.54),
digits = 0)
playerID
season <- "2014"
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url  <- paste("http://stats.nba.com/stats/commonallplayers?LeagueID=00&Season=",seasonid,"&IsOnlyCurrentSeason=1%20", sep="")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
n2$resultSets$name
index <- which(n2$resultSets$name == "CommonAllPlayers")
cols <- unlist(n2$resultSets$headers[index])
vls <- n2$resultSets$rowSet[index]
vls2 <- as.data.frame(vls,stringsAsFactors = F)
colnames(vls2) <- cols
str(vls2)
season <- "2014"
type <- "offensive"
platype <- "PostTouch"
seasonid <- paste(season, as.numeric(substring(season,3,4))+1,sep="-")
url <- paste("http://stats.nba.com/stats/leaguedashptstats?College=&Conference=&%20Country=&DateFrom=&DateTo=&Division=&DraftPick=&DraftYear=%20&GameScope=&Height=&LastNGames=0&LeagueID=00&Location=&Month=0&OpponentTeamID=0&Outcome=&PORound=0%20&PerMode=PerGame&PlayerExperience=&PlayerOrTeam=Player&PlayerPosition=&PtMeasureType=",playtype,"&Season=",seasonid,"&SeasonSegment=&SeasonType=Regular+Season&StarterBench=%20&TeamID=0&VsConference=&VsDivision=&Weight=", sep = "")
platype <- "PostTouch"
playtype <- "PostTouch"
url <- paste("http://stats.nba.com/stats/leaguedashptstats?College=&Conference=&%20Country=&DateFrom=&DateTo=&Division=&DraftPick=&DraftYear=%20&GameScope=&Height=&LastNGames=0&LeagueID=00&Location=&Month=0&OpponentTeamID=0&Outcome=&PORound=0%20&PerMode=PerGame&PlayerExperience=&PlayerOrTeam=Player&PlayerPosition=&PtMeasureType=",playtype,"&Season=",seasonid,"&SeasonSegment=&SeasonType=Regular+Season&StarterBench=%20&TeamID=0&VsConference=&VsDivision=&Weight=", sep = "")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
summary(n2)
n2$resultSets$name
index <- which(n2$resultSets$name == "LeagueDashPtStats")
index
cols <- unlist(n2$resultSets$headers[index])
cols
vls <- n2$resultSets$rowSet[index]
vls2 <- as.data.frame(vls,stringsAsFactors = F)
colnames(vls2) <- cols
playtype <- "Isolation"
url <- paste("http://stats-prod.nba.com/wp-json/statscms/v1/synergy/player/?category=",playtype,"&limit=500&name=",type,"&q=2452161&season=",season,"&seasonType=Reg", sep ="")
url
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
summary(n2)
n2$result_count
n2
n1
url <- paste("http://stats-prod.nba.com/wp-json/statscms/v1/synergy/player/?category=",playtype,"&limit=500&name=",type,"&q=2452161&season=",season,"&seasonType=Reg", sep ="")
web_page <- readLines(url, warn = F)
nba <- as.data.frame(fromJSON(web_page),stringsAsFactors = FALSE)
season <- "2016"
type <- "offensive"
playtype <- "Isolation"
url <- paste("http://stats-prod.nba.com/wp-json/statscms/v1/synergy/player/?category=",playtype,"&limit=500&name=",type,"&q=2452161&season=",season,"&seasonType=Reg", sep ="")
n1 <- readLines(url,warn = F)
n2 <- fromJSON(n1)
n2
n2$resultSets$name
n2$resultSets
n2$result_count
n2$results
View(n2$results)
class(n2$results)
str(n2$results)
library(NBAr)
dbname <- "nba14"
season <- "2014"
dbname <- "nba14"
season <- "2014"
gamelist<- paste("00",as.character(c(21400001:21401230)),sep="")
pbps <- lapply(gamelist, getBoxscorePt, season=season)
playtype <- c("PostTouch","ElbowTouch","PaintTouch"
,"CatchShoot","Drives","PullUpShot","Isolation",
"PRBallHandler","PRRollman","Spotup","Handoff","Cut","OffScreen",
"OffRebound")
pbps <- lapply(playtype, getPlaytypePlayer, type = "offensive", season = season)
ind <- which(lapply(pbps, is.null) == T)
if(length(ind) > 0 ){
pbps <- pbps[- ind]
}
playtypesteam <- join_all(dfs = pbps, by="TEAM_ID", type='left')
playtypesplayer <- join_all(dfs = pbps, type='left', by=c("PLAYER_ID","PLAYER_NAME"))
library(plyr)
playtypesplayer <- join_all(dfs = pbps, type='left', by=c("PLAYER_ID","PLAYER_NAME"))
playtype <- c("PostTouch","ElbowTouch","PaintTouch"
,"CatchShoot","Drives","PullUpShot","Isolation",
"PRBallHandler","PRRollman","Spotup","Handoff","Cut","OffScreen",
"OffRebound")
pbps <- lapply(playtype, getPlaytypePlayer, type = "offensive", season = season)
ind <- which(lapply(pbps, is.null) == T)
if(length(ind) > 0 ){
pbps <- pbps[- ind]
}
playtypesplayer <- join_all(dfs = pbps, type='left', by=c("PLAYER_ID","PLAYER_NAME"))
playtype <- c("PostTouch","ElbowTouch","PaintTouch"
,"CatchShoot","Drives","PullUpShot","Isolation",
"PRBallHandler","PRRollman","Spotup","Handoff","Cut","OffScreen",
"OffRebound")
pbps <- lapply(playtype, getPlaytypePlayer, type = "offensive", season = season)
pbps
library(NBAr)
